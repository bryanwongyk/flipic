{"version":3,"file":"reactusegesture.umd.development.js","sources":["../src/utils/math.ts","../src/utils/rubberband.ts","../src/utils/utils.ts","../src/utils/resolveOptionsWith.ts","../src/utils/event.ts","../src/utils/config.ts","../src/hooks/buildConfig.ts","../src/utils/state.ts","../src/recognizers/Recognizer.ts","../src/Controller.ts","../src/hooks/useRecognizers.ts","../src/recognizers/CoordinatesRecognizer.ts","../src/recognizers/DragRecognizer.ts","../src/utils/memoize-one.ts","../src/utils/react-fast-compare.ts","../src/hooks/useDrag.ts","../src/recognizers/DistanceAngleRecognizer.ts","../src/recognizers/PinchRecognizer.ts","../src/hooks/usePinch.ts","../src/recognizers/WheelRecognizer.ts","../src/hooks/useWheel.ts","../src/recognizers/MoveRecognizer.ts","../src/hooks/useMove.ts","../src/hooks/useHover.ts","../src/recognizers/ScrollRecognizer.ts","../src/hooks/useScroll.ts","../src/hooks/useGesture.ts"],"sourcesContent":["// vector add\nexport function addV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v + v2[i]) as T\n}\n\n// vector substract\nexport function subV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v - v2[i]) as T\n}\n\n/**\n * Calculates distance\n * @param movement the difference between current and initial vectors\n * @returns distance\n */\nexport function calculateDistance(movement: number[]): number {\n  return Math.hypot(...movement)\n}\n\ninterface Kinematics {\n  velocities: number[]\n  velocity: number\n  distance: number\n  direction: number[]\n}\n\nexport function calculateAllGeometry<T extends number[]>(movement: T, delta: T = movement) {\n  const dl = calculateDistance(delta)\n\n  const alpha = dl === 0 ? 0 : 1 / dl\n\n  const direction = delta.map(v => alpha * v) as T\n  const distance = calculateDistance(movement)\n\n  return { distance, direction }\n}\n\n/**\n * Calculates all kinematics\n * @template T the expected vector type\n * @param movement the difference between current and initial vectors\n * @param delta the difference between current and previous vectors\n * @param delta_t the time difference between current and previous timestamps\n * @returns all kinematics\n */\nexport function calculateAllKinematics<T extends number[]>(movement: T, delta: T, dt: number): Kinematics {\n  const dl = calculateDistance(delta)\n\n  const alpha = dl === 0 ? 0 : 1 / dl\n  const beta = dt === 0 ? 0 : 1 / dt\n\n  const velocity = beta * dl\n  const velocities = delta.map(v => beta * v)\n  const direction = delta.map(v => alpha * v)\n  const distance = calculateDistance(movement)\n\n  return { velocities, velocity, distance, direction }\n}\n\n/**\n * Because IE doesn't support `Math.sign` function, so we use the polyfill version of the function.\n * This polyfill function is suggested by Mozilla:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign#Polyfill\n * @param x target number\n */\nexport function sign(x: number) {\n  if (Math.sign) return Math.sign(x)\n  return Number(x > 0) - Number(x < 0) || +x\n}\n","function minMax(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(value, max))\n}\n\n// Based on @aholachek ;)\n// https://twitter.com/chpwn/status/285540192096497664\n// iOS constant = 0.55\n\n// https://medium.com/@nathangitter/building-fluid-interfaces-ios-swift-9732bb934bf5\nfunction rubberband2(distance: number, constant: number) {\n  // default constant from the article is 0.7\n  return Math.pow(distance, constant * 5)\n}\n\nfunction rubberband(distance: number, dimension: number, constant: number) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return rubberband2(distance, constant)\n  return (distance * dimension * constant) / (dimension + constant * distance)\n}\n\nexport function rubberbandIfOutOfBounds(position: number, min: number, max: number, constant = 0.15) {\n  if (constant === 0) return minMax(position, min, max)\n  if (position < min) return -rubberband(min - position, max - min, constant) + min\n  if (position > max) return +rubberband(position - max, max - min, constant) + max\n  return position\n}\n","export function noop() {}\n\n/**\n * TODO Beware that only optimized cases are covered in tests =)\n * TODO Need to cover general case as well\n *\n * @param fns\n */\nexport function chainFns(...fns: Function[]): Function {\n  if (fns.length === 0) return noop\n  if (fns.length === 1) return fns[0]\n\n  return function (this: any) {\n    var result\n    for (let fn of fns) {\n      result = fn.apply(this, arguments) || result\n    }\n    return result\n  }\n}\n\n/**\n * Expects a simple value or 2D vector (an array with 2 elements) and\n * always returns 2D vector. If simple value is passed, returns a\n * vector with this value as both coordinates.\n *\n * @param value\n */\nexport function ensureVector<T>(value: T | [T, T] | undefined, fallback?: T | [T, T]): [T, T] {\n  if (value === undefined) {\n    if (fallback === undefined) {\n      throw new Error('Must define fallback value if undefined is expected')\n    }\n    value = fallback\n  }\n\n  if (Array.isArray(value)) return value\n  return [value, value]\n}\n\n/**\n * Helper for defining a default value\n *\n * @param value\n * @param fallback\n */\nexport function assignDefault<T extends Object>(value: Partial<T> | undefined, fallback: T): T {\n  return Object.assign({}, fallback, value || {})\n}\n\n/**\n * Resolves getters (functions) by calling them\n * If simple value is given it just passes through\n *\n * @param v\n */\nexport function valueFn<T>(v: T | ((...args: any[]) => T), ...args: any[]): T {\n  if (typeof v === 'function') {\n    // @ts-ignore\n    return v(...args)\n  } else {\n    return v\n  }\n}\n","export type Resolver = (x: any, key: string, obj: object) => any\nexport type ResolverMap = { [k: string]: Resolver | ResolverMap | boolean }\n\nexport function resolveWith<T extends { [k: string]: any }, V extends { [k: string]: any }>(\n  config: Partial<T> = {},\n  resolvers: ResolverMap\n): V {\n  const result: any = {}\n\n  for (const [key, resolver] of Object.entries(resolvers))\n    switch (typeof resolver) {\n      case 'function':\n        result[key] = resolver.call(result, config[key], key, config)\n        break\n      case 'object':\n        result[key] = resolveWith(config[key], resolver)\n        break\n      case 'boolean':\n        if (resolver) result[key] = config[key]\n        break\n    }\n\n  return result\n}\n","import { Vector2, WebKitGestureEvent, DomEvents } from '../types'\n\n/**\n * Whether the browser supports GestureEvent (ie Safari)\n * @returns true if the browser supports gesture event\n */\nexport function supportsGestureEvents(): boolean {\n  try {\n    // TODO [TS] possibly find GestureEvent definitions?\n    // @ts-ignore: no type definitions for webkit GestureEvents\n    return 'constructor' in GestureEvent\n  } catch (e) {\n    return false\n  }\n}\n\nexport function supportsTouchEvents(): boolean {\n  return typeof window !== 'undefined' && 'ontouchstart' in window\n}\n\nexport function supportsPointerEvents(): boolean {\n  return typeof window !== 'undefined' && 'onpointerdown' in window\n}\n\nfunction getEventTouches(event: PointerEvent | React.PointerEvent | TouchEvent | React.TouchEvent) {\n  if ('pointerId' in event) return null\n  return event.type === 'touchend' ? event.changedTouches : event.targetTouches\n}\n\nexport function getTouchIds(event: TouchEvent | React.TouchEvent): number[] {\n  return Array.from(getEventTouches(event)!).map(t => t.identifier)\n}\n\nexport function getGenericEventData(event: DomEvents) {\n  const buttons = 'buttons' in event ? event.buttons : 0\n  const { shiftKey, altKey, metaKey, ctrlKey } = event as any // TODO check if this might create some overrides?\n  return { buttons, shiftKey, altKey, metaKey, ctrlKey }\n}\n\nconst identity = (xy: Vector2) => xy\n\n/**\n * Gets pointer event values.\n * @param event\n * @returns pointer event values\n */\nexport function getPointerEventValues(\n  event: TouchEvent | React.TouchEvent | React.PointerEvent | PointerEvent,\n  transform = identity\n): Vector2 {\n  const touchEvents = getEventTouches(event)\n  const { clientX, clientY } = touchEvents ? touchEvents[0] : (event as React.PointerEvent)\n  return transform([clientX, clientY])\n}\n\n/**\n * Gets two touches event data\n * @param event\n * @returns two touches event data\n */\nexport function getTwoTouchesEventValues(\n  event: React.TouchEvent | TouchEvent,\n  pointerIds: [number, number],\n  transform = identity\n) {\n  const [A, B] = Array.from(event.touches).filter(t => pointerIds.includes(t.identifier))\n\n  if (!A || !B) throw Error(`The event doesn't have two pointers matching the pointerIds`)\n\n  const dx = B.clientX - A.clientX\n  const dy = B.clientY - A.clientY\n  const cx = (B.clientX + A.clientX) / 2\n  const cy = (B.clientY + A.clientY) / 2\n\n  // const e: any = 'nativeEvent' in event ? event.nativeEvent : event\n\n  const distance = Math.hypot(dx, dy)\n  // FIXME rotation has inconsistant values so we're not using it atm\n  // const angle = (e.rotation as number) ?? -(Math.atan2(dx, dy) * 180) / Math.PI\n  const angle = -(Math.atan2(dx, dy) * 180) / Math.PI\n  const values: Vector2 = transform([distance, angle])\n  const origin: Vector2 = transform([cx, cy])\n\n  return { values, origin }\n}\n\n/**\n * Gets scroll event values\n * @param event\n * @returns scroll event values\n */\nexport function getScrollEventValues(event: React.UIEvent | UIEvent, transform = identity): Vector2 {\n  // If the currentTarget is the window then we return the scrollX/Y position.\n  // If not (ie the currentTarget is a DOM element), then we return scrollLeft/Top\n  const { scrollX, scrollY, scrollLeft, scrollTop } = event.currentTarget as Element & Window\n  return transform([scrollX || scrollLeft || 0, scrollY || scrollTop || 0])\n}\n\n// wheel delta defaults from https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\nconst LINE_HEIGHT = 40\nconst PAGE_HEIGHT = 800\n\n/**\n * Gets wheel event values.\n * @param event\n * @returns wheel event values\n */\nexport function getWheelEventValues(event: React.WheelEvent | WheelEvent, transform = identity): Vector2 {\n  let { deltaX, deltaY, deltaMode } = event\n  // normalize wheel values, especially for Firefox\n  if (deltaMode === 1) {\n    deltaX *= LINE_HEIGHT\n    deltaY *= LINE_HEIGHT\n  } else if (deltaMode === 2) {\n    deltaX *= PAGE_HEIGHT\n    deltaY *= PAGE_HEIGHT\n  }\n  return transform([deltaX, deltaY])\n}\n\n/**\n * Gets webkit gesture event values.\n * @param event\n * @returns webkit gesture event values\n */\nexport function getWebkitGestureEventValues(event: WebKitGestureEvent, transform = identity): Vector2 {\n  return transform([event.scale, event.rotation])\n}\n","import { ensureVector, assignDefault, valueFn } from './utils'\nimport { resolveWith } from './resolveOptionsWith'\n\nimport {\n  GenericOptions,\n  InternalGenericOptions,\n  DragConfig,\n  GestureOptions,\n  InternalDragOptions,\n  InternalGestureOptions,\n  CoordinatesConfig,\n  InternalCoordinatesOptions,\n  DistanceAngleConfig,\n  InternalDistanceAngleOptions,\n  Vector2,\n  Bounds,\n  StateKey,\n  State,\n  CoordinatesKey,\n  DistanceAngleKey,\n} from '../types'\nimport { supportsTouchEvents, supportsPointerEvents } from './event'\n\nexport const DEFAULT_DRAG_DELAY = 180\nexport const DEFAULT_RUBBERBAND = 0.15\nexport const DEFAULT_SWIPE_VELOCITY = 0.5\nexport const DEFAULT_SWIPE_DISTANCE = 50\nexport const DEFAULT_SWIPE_DURATION = 250\n\nconst InternalGestureOptionsNormalizers = {\n  threshold(value: number | Vector2 = 0) {\n    return ensureVector(value)\n  },\n\n  rubberband(value: number | boolean | Vector2 = 0): Vector2 {\n    switch (value) {\n      case true:\n        return ensureVector(DEFAULT_RUBBERBAND)\n      case false:\n        return ensureVector(0)\n      default:\n        return ensureVector(value)\n    }\n  },\n\n  enabled(value = true) {\n    return value\n  },\n\n  triggerAllEvents(value = false) {\n    return value\n  },\n\n  initial(value = 0) {\n    if (typeof value === 'function') return value\n    return ensureVector(value)\n  },\n\n  transform: true,\n}\n\nconst InternalCoordinatesOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n  axis: true,\n  lockDirection(value = false) {\n    return value\n  },\n  bounds(value: Bounds | ((state?: State) => Bounds) = {}) {\n    if (typeof value === 'function')\n      return (state?: State) => InternalCoordinatesOptionsNormalizers.bounds(value(state))\n\n    const { left = -Infinity, right = Infinity, top = -Infinity, bottom = Infinity } = value\n\n    return [\n      [left, right],\n      [top, bottom],\n    ]\n  },\n}\n\nconst isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement\n\nconst InternalGenericOptionsNormalizers = {\n  enabled(value = true) {\n    return value\n  },\n  domTarget: true,\n  window(value = isBrowser ? window : undefined) {\n    return value\n  },\n  eventOptions({ passive = true, capture = false } = {}) {\n    return { passive, capture }\n  },\n  transform: true,\n}\n\nconst InternalDistanceAngleOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n\n  bounds(_value: undefined, _key: string, { distanceBounds = {}, angleBounds = {} }) {\n    const _distanceBounds = (state?: State) => {\n      const D = assignDefault(valueFn(distanceBounds, state), { min: -Infinity, max: Infinity })\n      return [D.min, D.max]\n    }\n\n    const _angleBounds = (state?: State) => {\n      const A = assignDefault(valueFn(angleBounds, state), { min: -Infinity, max: Infinity })\n      return [A.min, A.max]\n    }\n\n    if (typeof distanceBounds !== 'function' && typeof angleBounds !== 'function')\n      return [_distanceBounds(), _angleBounds()]\n\n    return (state?: State) => [_distanceBounds(state), _angleBounds(state)]\n  },\n}\n\nconst InternalDragOptionsNormalizers = {\n  ...InternalCoordinatesOptionsNormalizers,\n\n  useTouch(value = false) {\n    const supportsTouch = supportsTouchEvents()\n    const supportsPointer = supportsPointerEvents()\n    if (value && supportsTouch) return true\n    if (supportsTouch && !supportsPointer) return true\n    return false\n  },\n  experimental_preventWindowScrollY(value = false) {\n    return value\n  },\n  threshold(\n    this: InternalDragOptions,\n    v: number | Vector2 | undefined,\n    _k: string,\n    { filterTaps = false, lockDirection = false, axis = undefined }\n  ) {\n    const A = ensureVector(v, filterTaps ? 3 : lockDirection ? 1 : axis ? 1 : 0) as Vector2\n    this.filterTaps = filterTaps\n    return A\n  },\n\n  swipeVelocity(v: number | Vector2 = DEFAULT_SWIPE_VELOCITY) {\n    return ensureVector(v)\n  },\n  swipeDistance(v: number | Vector2 = DEFAULT_SWIPE_DISTANCE) {\n    return ensureVector(v)\n  },\n  swipeDuration(value = DEFAULT_SWIPE_DURATION) {\n    return value\n  },\n  delay(value: number | boolean = 0) {\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY\n      case false:\n        return 0\n      default:\n        return value\n    }\n  },\n}\n\nexport function getInternalGenericOptions(config: GenericOptions = {}): InternalGenericOptions {\n  // TODO warn when passive is set to true and domTarget is undefined\n  return resolveWith<GenericOptions, InternalGenericOptions>(config, InternalGenericOptionsNormalizers)\n}\n\nexport function getInternalGestureOptions<T extends StateKey>(\n  config: GestureOptions<T> = {}\n): InternalGestureOptions<T> {\n  return resolveWith<GestureOptions<T>, InternalGestureOptions<T>>(config, InternalGestureOptionsNormalizers)\n}\n\nexport function getInternalCoordinatesOptions<T extends CoordinatesKey>(\n  config: CoordinatesConfig<T> = {}\n): InternalCoordinatesOptions<T> {\n  return resolveWith<CoordinatesConfig<T>, InternalCoordinatesOptions<T>>(config, InternalCoordinatesOptionsNormalizers)\n}\n\nexport function getInternalDistanceAngleOptions<T extends DistanceAngleKey>(\n  config: DistanceAngleConfig<T> = {}\n): InternalDistanceAngleOptions<T> {\n  return resolveWith<DistanceAngleConfig<T>, InternalDistanceAngleOptions<T>>(\n    config,\n    InternalDistanceAngleOptionsNormalizers\n  )\n}\n\nexport function getInternalDragOptions(config: DragConfig = {}): InternalDragOptions {\n  return resolveWith<DragConfig, InternalDragOptions>(config, InternalDragOptionsNormalizers)\n}\n","import {\n  InternalConfig,\n  UseMoveConfig,\n  UseHoverConfig,\n  UseDragConfig,\n  UsePinchConfig,\n  UseScrollConfig,\n  UseWheelConfig,\n} from '../types'\n\nimport {\n  getInternalGenericOptions,\n  getInternalCoordinatesOptions,\n  getInternalDragOptions,\n  getInternalDistanceAngleOptions,\n} from '../utils/config'\n\nimport { UseGestureConfig } from '../types'\n\nexport function _buildMoveConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseMoveConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.move = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function _buildHoverConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseHoverConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.hover = { enabled: true, ...rest }\n  return opts\n}\n\nexport function _buildDragConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseDragConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.drag = getInternalDragOptions(rest)\n  return opts\n}\n\nexport function _buildPinchConfig({ domTarget, eventOptions, window, enabled, ...rest }: UsePinchConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.pinch = getInternalDistanceAngleOptions(rest)\n  return opts\n}\n\nexport function _buildScrollConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseScrollConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.scroll = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function _buildWheelConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseWheelConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.wheel = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function buildComplexConfig(config: UseGestureConfig = {}, actions: Set<string> = new Set()) {\n  const { drag, wheel, move, scroll, pinch, hover, eventOptions, window, transform, domTarget, enabled } = config\n\n  const mergedConfig: InternalConfig = getInternalGenericOptions({\n    domTarget,\n    eventOptions,\n    transform,\n    window,\n    enabled,\n  })\n\n  if (actions.has('onDrag')) mergedConfig.drag = getInternalDragOptions(drag)\n  if (actions.has('onWheel')) mergedConfig.wheel = getInternalCoordinatesOptions(wheel)\n  if (actions.has('onScroll')) mergedConfig.scroll = getInternalCoordinatesOptions(scroll)\n  if (actions.has('onMove')) mergedConfig.move = getInternalCoordinatesOptions(move)\n  if (actions.has('onPinch')) mergedConfig.pinch = getInternalDistanceAngleOptions(pinch)\n  if (actions.has('onHover')) mergedConfig.hover = { enabled: true, ...hover }\n\n  return mergedConfig\n}\n","import { noop } from './utils'\nimport { CommonGestureState, Coordinates, State, DistanceAngle, Vector2, DragState, PinchState } from '../types'\n\nfunction getInitial<T>(mixed: T): T & CommonGestureState {\n  return {\n    _active: false,\n    _blocked: false,\n    _intentional: [false, false],\n    _movement: [0, 0],\n    _initial: [0, 0],\n    _bounds: [\n      [-Infinity, Infinity],\n      [-Infinity, Infinity],\n    ],\n    _threshold: [0, 0],\n    _lastEventType: undefined,\n    _dragStarted: false,\n    _dragPreventScroll: false,\n    _dragIsTap: true,\n    _dragDelayed: false,\n    event: undefined,\n    intentional: false,\n    values: [0, 0],\n    velocities: [0, 0],\n    delta: [0, 0],\n    movement: [0, 0],\n    offset: [0, 0],\n    lastOffset: [0, 0],\n    direction: [0, 0],\n    initial: [0, 0],\n    previous: [0, 0],\n    first: false,\n    last: false,\n    active: false,\n    timeStamp: 0,\n    startTime: 0,\n    elapsedTime: 0,\n    cancel: noop,\n    canceled: false,\n    memo: undefined,\n    args: undefined,\n    ...mixed,\n  }\n}\n\nexport function getInitialState(): State {\n  const shared = {\n    hovering: false,\n    scrolling: false,\n    wheeling: false,\n    dragging: false,\n    moving: false,\n    pinching: false,\n    touches: 0,\n    buttons: 0,\n    down: false,\n    shiftKey: false,\n    altKey: false,\n    metaKey: false,\n    ctrlKey: false,\n    locked: false,\n  }\n\n  const drag = getInitial<DragState & Coordinates>({\n    _pointerId: undefined,\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n    tap: false,\n    swipe: [0, 0],\n  })\n\n  const pinch = getInitial<DistanceAngle & PinchState>({\n    // @ts-expect-error when used _pointerIds we can assert its type will be [number, number]\n    _pointerIds: [],\n    da: [0, 0] as Vector2,\n    vdva: [0, 0] as Vector2,\n    // @ts-expect-error origin can never be passed as undefined in userland\n    origin: undefined,\n    turns: 0,\n  })\n\n  const wheel = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  const move = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  const scroll = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  return { shared, drag, pinch, wheel, move, scroll }\n}\n","import Controller from '../Controller'\nimport {\n  StateKey,\n  SharedGestureState,\n  IngKey,\n  InternalConfig,\n  GestureKey,\n  GestureState,\n  EventTypes,\n  PartialGestureState,\n  Vector2,\n  FullGestureState,\n  RecognizerClass,\n} from '../types'\nimport { getInitialState } from '../utils/state'\nimport { rubberbandIfOutOfBounds } from '../utils/rubberband'\nimport { subV, addV, sign } from '../utils/math'\nimport { valueFn } from '../utils/utils'\n\nexport const RecognizersMap = new Map<GestureKey, RecognizerClass>()\n\nconst identity = (xy: Vector2) => xy\n\n/**\n * @private\n * Recognizer abstract class.\n */\nexport default abstract class Recognizer<T extends StateKey = StateKey> {\n  abstract readonly ingKey: IngKey // dragging, scrolling, etc.\n  protected debounced: Boolean = true\n  abstract readonly stateKey: T\n\n  /**\n   * Creates an instance of a gesture recognizer.\n   * @param stateKey drag, move, pinch, etc.\n   * @param controller the controller attached to the gesture\n   * @param [args] the args that should be passed to the gesture handler\n   */\n  constructor(readonly controller: Controller, readonly args: any[] = []) {\n    this.controller = controller\n    this.args = args\n  }\n\n  // Returns the gesture config\n  get config(): NonNullable<InternalConfig[T]> {\n    return this.controller.config[this.stateKey]!\n  }\n\n  // Is the gesture enabled\n  get enabled(): boolean {\n    return this.controller.config.enabled && this.config.enabled\n  }\n\n  // Returns the controller state for a given gesture\n  get state(): GestureState<T> {\n    return this.controller.state[this.stateKey]\n  }\n\n  // Returns the gesture handler\n  get handler() {\n    return this.controller.handlers[this.stateKey]!\n  }\n\n  get transform() {\n    return this.config.transform || this.controller.config.transform || identity\n  }\n\n  // Convenience method to update the shared state\n  protected updateSharedState(sharedState: Partial<SharedGestureState> | null) {\n    Object.assign(this.controller.state.shared, sharedState)\n  }\n\n  // Convenience method to update the gesture state\n  protected updateGestureState(gestureState: PartialGestureState<T> | null) {\n    Object.assign(this.state, gestureState)\n  }\n\n  // Convenience method to set a timeout for a given gesture\n  protected setTimeout = (callback: (...args: any[]) => void, ms: number = 140, ...args: any[]): void => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n    this.controller.timeouts[this.stateKey] = window.setTimeout(callback, ms, ...args)\n  }\n\n  // Convenience method to clear a timeout for a given gesture\n  protected clearTimeout = () => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n  }\n\n  protected abstract getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T>\n\n  protected abstract getInternalMovement(values: Vector2, state: GestureState<T>): Vector2\n\n  protected abstract mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'>\n\n  public abstract addBindings(bindings: any): void\n\n  /**\n   * Returns state properties depending on the movement and state.\n   *\n   * Should be overriden for custom behavior, doesn't do anything in the implementation\n   * below.\n   */\n  protected checkIntentionality(\n    _intentional: [false | number, false | number],\n    _movement: Vector2\n  ): PartialGestureState<T> {\n    return { _intentional, _blocked: false } as PartialGestureState<T>\n  }\n\n  /**\n   * Returns basic movement properties for the gesture based on the next values and current state.\n   */\n  protected getMovement(values: Vector2): PartialGestureState<T> {\n    const { rubberband } = this.config\n\n    const {\n      _bounds,\n      _initial,\n      _active,\n      _intentional: wasIntentional,\n      lastOffset,\n      movement: prevMovement,\n      _threshold: _T,\n    } = this.state\n    const M = this.getInternalMovement(values, this.state)\n\n    const i0 = wasIntentional[0] === false ? getIntentionalDisplacement(M[0], _T[0]) : wasIntentional[0]\n    const i1 = wasIntentional[1] === false ? getIntentionalDisplacement(M[1], _T[1]) : wasIntentional[1]\n\n    // Get gesture specific state properties based on intentionality and movement.\n    const intentionalityCheck = this.checkIntentionality([i0, i1], M)\n    if (intentionalityCheck._blocked) {\n      return { ...intentionalityCheck, _movement: M, delta: [0, 0] }\n    }\n\n    const _intentional = intentionalityCheck._intentional!\n    const _movement = M\n\n    /**\n     * The movement sent to the handler has 0 in its dimensions when intentionality is false.\n     * It is calculated from the actual movement minus the threshold.\n     */\n    let movement: Vector2 = [\n      _intentional[0] !== false ? M[0] - _intentional[0] : 0,\n      _intentional[1] !== false ? M[1] - _intentional[1] : 0,\n    ]\n\n    const offset = addV(movement, lastOffset)\n\n    /**\n     * Rubberband should be 0 when the gesture is no longer active, so that movement\n     * and offset can return within their bounds.\n     */\n    const _rubberband: Vector2 = _active ? rubberband : [0, 0]\n    movement = computeRubberband(_bounds, addV(movement, _initial), _rubberband)\n\n    return {\n      ...intentionalityCheck,\n      intentional: _intentional[0] !== false || _intentional[1] !== false,\n      _initial,\n      _movement,\n      movement,\n      values,\n      offset: computeRubberband(_bounds, offset, _rubberband),\n      delta: subV(movement, prevMovement),\n    } as PartialGestureState<T>\n  }\n\n  // Cleans the gesture. Can be overriden by gestures.\n  protected clean() {\n    this.clearTimeout()\n  }\n\n  /**\n   * Fires the gesture handler\n   */\n  protected fireGestureHandler = (forceFlag: boolean = false): FullGestureState<T> | null => {\n    /**\n     * If the gesture has been blocked (this can happen when the gesture has started in an unwanted direction),\n     * clean everything and don't do anything.\n     */\n    if (this.state._blocked) {\n      // we need debounced gestures to end by themselves\n      if (!this.debounced) {\n        this.state._active = false\n        this.clean()\n      }\n      return null\n    }\n\n    // If the gesture has no intentional dimension, don't fire the handler.\n    if (!forceFlag && !this.state.intentional && !this.config.triggerAllEvents) return null\n\n    if (this.state.intentional) {\n      const prev_active = this.state.active\n      const next_active = this.state._active\n\n      this.state.active = next_active\n      this.state.first = next_active && !prev_active\n      this.state.last = prev_active && !next_active\n\n      this.controller.state.shared[this.ingKey] = next_active // Sets dragging, pinching, etc. to the gesture active state\n    }\n    const touches = this.controller.pointerIds.size || this.controller.touchIds.size\n    const down = this.controller.state.shared.buttons > 0 || touches > 0\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...this.mapStateValues(this.state), // Sets xy or da to the gesture state values\n      locked: !!document.pointerLockElement,\n      touches,\n      down,\n    } as FullGestureState<T>\n\n    // @ts-expect-error\n    const newMemo = this.handler(state)\n\n    // Sets memo to the returned value of the handler (unless it's not undefined)\n    this.state.memo = newMemo !== void 0 ? newMemo : this.state.memo\n\n    return state\n  }\n}\n\n//--------------------------------------------\n\nfunction getIntentionalDisplacement(movement: number, threshold: number): number | false {\n  if (Math.abs(movement) >= threshold) {\n    return sign(movement) * threshold\n  } else {\n    return false\n  }\n}\n\nfunction computeRubberband(bounds: [Vector2, Vector2], [Vx, Vy]: Vector2, [Rx, Ry]: Vector2): Vector2 {\n  const [[X1, X2], [Y1, Y2]] = bounds\n\n  return [rubberbandIfOutOfBounds(Vx, X1, X2, Rx), rubberbandIfOutOfBounds(Vy, Y1, Y2, Ry)]\n}\n\n/**\n * Returns a generic, common payload for all gestures from an event.\n */\nexport function getGenericPayload<T extends StateKey>(\n  { state }: Recognizer<T>,\n  event: EventTypes[T],\n  isStartEvent?: boolean\n) {\n  const { timeStamp, type: _lastEventType } = event\n  const previous = state.values\n  const elapsedTime = isStartEvent ? 0 : timeStamp - state.startTime!\n  return { _lastEventType, event, timeStamp, elapsedTime, previous }\n}\n\n/**\n * Returns the reinitialized start state for the gesture.\n * Should be common to all gestures.\n */\nexport function getStartGestureState<T extends StateKey>(\n  { state, config, stateKey, args, transform }: Recognizer<T>,\n  values: Vector2,\n  event: EventTypes[T],\n  initial?: Vector2\n) {\n  const offset = state.offset\n  const startTime = event.timeStamp\n\n  const { initial: initialFn, bounds, threshold } = config\n\n  // the _threshold is the difference between a [0,0] offset converted to\n  // its new space coordinates\n  const _threshold = subV(transform(threshold), transform([0, 0])).map(Math.abs)\n\n  const _state = {\n    ...getInitialState()[stateKey],\n    _active: true,\n    args,\n    values,\n    initial: initial ?? values,\n    _threshold,\n    offset,\n    lastOffset: offset,\n    startTime,\n  }\n\n  return { ..._state, _initial: valueFn(initialFn, _state), _bounds: valueFn(bounds, _state) }\n}\n","import {\n  StateKey,\n  State,\n  Fn,\n  ReactEventHandlerKey,\n  ReactEventHandlers,\n  InternalConfig,\n  InternalHandlers,\n  RecognizerClass,\n} from './types'\nimport { supportsTouchEvents, supportsGestureEvents, getTouchIds } from './utils/event'\nimport { getInitialState } from './utils/state'\nimport { chainFns } from './utils/utils'\n\n/**\n * The controller will keep track of the state for all gestures and also keep\n * track of timeouts, and window listeners.\n */\nexport default class Controller {\n  public nativeRefs!: any\n  public config!: InternalConfig\n  public handlers!: InternalHandlers\n  public state: State // state for all gestures\n  public timeouts: { [stateKey in StateKey]?: number } // tracks timeouts of debounced gestures\n  public domListeners: [string, Fn][] // when config.domTarget is set, we attach events directly to the dom\n  public windowListeners: { [stateKey in StateKey]?: [string, Function][] } // keeps track of window listeners added by gestures (drag only at the moment)\n\n  public pointerIds = new Set<number>() // register Pointer Events pointerIds\n  public touchIds = new Set<number>() // register Touch Events identifiers\n  public supportsTouchEvents = supportsTouchEvents()\n  public supportsGestureEvents = supportsGestureEvents()\n\n  constructor(private classes: Set<RecognizerClass>) {\n    this.classes = classes\n    this.state = getInitialState()\n    this.timeouts = {}\n    this.domListeners = []\n    this.windowListeners = {}\n  }\n\n  public bind = (...args: any[]) => {\n    const bindings: { [key: string]: Function[] } = {}\n\n    for (let RecognizerClass of this.classes) new RecognizerClass(this, args).addBindings(bindings)\n\n    // // we also add event bindings for native handlers\n    for (let eventKey in this.nativeRefs) {\n      addBindings(bindings, eventKey, (event: any) => this.nativeRefs[eventKey]({ ...this.state.shared, event, args }))\n    }\n\n    if (this.config.domTarget) {\n      // If config.domTarget is set we add event listeners to it and return the clean function.\n      return updateDomListeners(this, bindings)\n    } else {\n      // If not, we return an object that contains gesture handlers mapped to react handler event keys.\n      return getPropsListener(this, bindings)\n    }\n  }\n\n  public effect = () => {\n    if (this.config.domTarget) this.bind()\n    return this.clean\n  }\n\n  /**\n   * Function ran on component unmount: cleans timeouts and removes dom listeners set by the bind function.\n   */\n  public clean = (): void => {\n    const domTarget = getDomTargetFromConfig(this.config)\n    const { eventOptions } = this.config\n    if (domTarget) removeListeners(domTarget, takeAll(this.domListeners), eventOptions)\n    Object.values(this.timeouts).forEach(clearTimeout)\n    clearAllWindowListeners(this)\n  }\n}\n\nexport function addEventIds(\n  controller: Controller,\n  event: React.TouchEvent | TouchEvent | React.PointerEvent | PointerEvent\n) {\n  if ('pointerId' in event) {\n    controller.pointerIds.add(event.pointerId)\n  } else {\n    controller.touchIds = new Set(getTouchIds(event))\n  }\n}\n\nexport function removeEventIds(\n  controller: Controller,\n  event: React.TouchEvent | TouchEvent | React.PointerEvent | PointerEvent\n) {\n  if ('pointerId' in event) {\n    controller.pointerIds.delete(event.pointerId)\n  } else {\n    getTouchIds(event).forEach(id => controller.touchIds.delete(id))\n  }\n}\n\nexport function clearAllWindowListeners(controller: Controller) {\n  const {\n    config: { window: el, eventOptions },\n    windowListeners,\n  } = controller\n  if (!el) return\n\n  for (let stateKey in windowListeners) {\n    const handlers = windowListeners[stateKey as StateKey]\n    removeListeners(el, handlers, eventOptions)\n  }\n\n  controller.windowListeners = {}\n}\n\nexport function clearWindowListeners(\n  { config, windowListeners }: Controller,\n  stateKey: StateKey,\n  options = config.eventOptions\n) {\n  if (!config.window) return\n  removeListeners(config.window, windowListeners[stateKey], options)\n  delete windowListeners[stateKey]\n}\n\nexport function updateWindowListeners(\n  { config, windowListeners }: Controller,\n  stateKey: StateKey,\n  listeners: [string, Fn][] = [],\n  options = config.eventOptions\n) {\n  if (!config.window) return\n  removeListeners(config.window, windowListeners[stateKey], options)\n  addListeners(config.window, (windowListeners[stateKey] = listeners), options)\n}\n\nfunction updateDomListeners({ config, domListeners }: Controller, bindings: { [key: string]: Function[] }) {\n  const domTarget = getDomTargetFromConfig(config)\n  if (!domTarget) throw new Error('domTarget must be defined')\n  const { eventOptions } = config\n\n  removeListeners(domTarget, takeAll(domListeners), eventOptions)\n\n  for (let [key, fns] of Object.entries(bindings)) {\n    const name = key.slice(2).toLowerCase()\n    domListeners.push([name, chainFns(...fns)])\n  }\n\n  addListeners(domTarget, domListeners, eventOptions)\n}\n\nfunction getPropsListener({ config }: Controller, bindings: { [key: string]: Function[] }) {\n  const props: ReactEventHandlers = {}\n  const captureString = config.eventOptions.capture ? 'Capture' : ''\n  for (let [event, fns] of Object.entries(bindings)) {\n    const fnsArray = Array.isArray(fns) ? fns : [fns]\n    const key = (event + captureString) as ReactEventHandlerKey\n    props[key] = chainFns(...(fnsArray as Fn[]))\n  }\n  return props\n}\n\nfunction takeAll<T>(array: Array<T> = []) {\n  return array.splice(0, array.length)\n}\n\nfunction getDomTargetFromConfig({ domTarget }: InternalConfig) {\n  return domTarget && 'current' in domTarget ? domTarget.current : domTarget\n}\n\n/**\n * bindings is an object which keys match ReactEventHandlerKeys.\n * Since a recognizer might want to bind a handler function to an event key already used by a previously\n * added recognizer, we need to make sure that each event key is an array of all the functions mapped for\n * that key.\n */\nexport function addBindings(bindings: any, name: string, fn: Fn): void {\n  if (!bindings[name]) bindings[name] = []\n  bindings[name]!.push(fn)\n}\n\nfunction addListeners(el: EventTarget, listeners: Array<[string, Fn]> = [], options = {}) {\n  for (let [eventName, eventHandler] of listeners) {\n    el.addEventListener(eventName, eventHandler, options)\n  }\n}\n\nfunction removeListeners(el: EventTarget, listeners: Array<[string, Fn]> = [], options = {}) {\n  for (let [eventName, eventHandler] of listeners) {\n    el.removeEventListener(eventName, eventHandler, options)\n  }\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from 'react'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport Controller from '../Controller'\nimport {\n  InternalConfig,\n  HookReturnType,\n  InternalHandlers,\n  GenericOptions,\n  RecognizerClass,\n  NativeHandlers,\n} from '../types'\n\n/**\n * Utility hook called by all gesture hooks and that will be responsible for the internals.\n *\n * @param handlers\n * @param classes\n * @param config\n * @param nativeHandlers - native handlers such as onClick, onMouseDown, etc.\n */\nexport default function useRecognizers<Config extends Partial<GenericOptions>>(\n  handlers: Partial<InternalHandlers>,\n  config: InternalConfig,\n  nativeHandlers: Partial<NativeHandlers> = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const classes = resolveClasses(handlers)\n\n  const controller = React.useMemo(() => new Controller(classes), [])\n  controller!.config = config\n  controller!.handlers = handlers\n  controller!.nativeRefs = nativeHandlers\n\n  React.useEffect(controller.effect, [])\n\n  // @ts-ignore\n  if (controller.config.domTarget) return deprecationNoticeForDomTarget\n  // @ts-ignore\n  return controller.bind\n}\n\nfunction deprecationNoticeForDomTarget() {\n  if (process.env.NODE_ENV === 'development') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Deprecation notice: When the \\`domTarget\\` option is specified, you don't need to write \\`useEffect(bind, [bind])\\` anymore: event binding is now made handled internally to this lib.\\n\\nNext version won't return anything when \\`domTarget\\` is provided, therefore your code will break if you try to call \\`useEffect\\`.`\n    )\n  }\n}\n\nfunction resolveClasses(internalHandlers: Partial<InternalHandlers>) {\n  const classes = new Set<RecognizerClass>()\n\n  if (internalHandlers.drag) classes.add(RecognizersMap.get('drag')!)\n  if (internalHandlers.wheel) classes.add(RecognizersMap.get('wheel')!)\n  if (internalHandlers.scroll) classes.add(RecognizersMap.get('scroll')!)\n  if (internalHandlers.move) classes.add(RecognizersMap.get('move')!)\n  if (internalHandlers.pinch) classes.add(RecognizersMap.get('pinch')!)\n  if (internalHandlers.hover) classes.add(RecognizersMap.get('hover')!)\n\n  return classes\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, subV } from '../utils/math'\nimport { Vector2, PartialGestureState, GestureState, CoordinatesKey } from '../types'\n\n/**\n * @private\n * Abstract class for coordinates-based gesture recongizers\n */\nexport default abstract class CoordinatesRecognizer<T extends CoordinatesKey> extends Recognizer<T> {\n  /**\n   * Returns the real movement (without taking intentionality into account)\n   */\n  protected getInternalMovement(values: Vector2, state: GestureState<T>): Vector2 {\n    return subV(values, state.initial)\n  }\n\n  /**\n   * In coordinates-based gesture, this function will detect the first intentional axis,\n   * lock the gesture axis if lockDirection is specified in the config, block the gesture\n   * if the first intentional axis doesn't match the specified axis in config.\n   */\n  protected checkIntentionality(\n    _intentional: [false | number, false | number],\n    _movement: Vector2\n  ): PartialGestureState<T> {\n    if (_intentional[0] === false && _intentional[1] === false) {\n      return { _intentional, axis: this.state.axis } as PartialGestureState<T>\n    }\n    const [absX, absY] = _movement.map(Math.abs)\n    const axis = this.state.axis || (absX > absY ? 'x' : absX < absY ? 'y' : undefined)\n    if (!this.config.axis && !this.config.lockDirection) return { _intentional, _blocked: false, axis } as any\n    if (!axis) return { _intentional: [false, false], _blocked: false, axis } as any\n    if (!!this.config.axis && axis !== this.config.axis) return { _intentional, _blocked: true, axis } as any\n    _intentional![axis === 'x' ? 1 : 0] = false\n    return { _intentional, _blocked: false, axis } as any\n  }\n\n  getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T> {\n    const state = this.getMovement(values)\n    if (!state._blocked) {\n      const dt = event.timeStamp - this.state.timeStamp!\n      Object.assign(state, calculateAllKinematics(state.movement!, state.delta!, dt))\n    }\n    return state\n  }\n\n  protected mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'> {\n    return { xy: state.values, vxvy: state.velocities } as Omit<PartialGestureState<T>, 'event'>\n  }\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getPointerEventValues, getGenericEventData } from '../utils/event'\nimport { addV, calculateDistance, sign } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings, updateWindowListeners, clearWindowListeners, addEventIds, removeEventIds } from '../Controller'\n\nexport const TAP_DISTANCE_THRESHOLD = 3\nexport const SWIPE_MAX_ELAPSED_TIME = 220\n\nfunction persistEvent(event: React.PointerEvent | PointerEvent) {\n  'persist' in event && typeof event.persist === 'function' && event.persist()\n}\n\nexport class DragRecognizer extends CoordinatesRecognizer<'drag'> {\n  readonly ingKey = 'dragging'\n  readonly stateKey = 'drag'\n\n  // TODO add back when setPointerCapture is widely wupported\n  // https://caniuse.com/#search=setPointerCapture\n  private setPointerCapture = (event: React.PointerEvent | PointerEvent) => {\n    // don't perform pointere capture when user wants to use touch events or\n    // when a pointerLockElement exists as this would throw an error\n    if (this.config.useTouch || document.pointerLockElement) return\n\n    const { target, pointerId } = event\n    if (target && 'setPointerCapture' in target) {\n      // this would work in the DOM but doesn't with react three fiber\n      // target.addEventListener('pointermove', this.onDragChange, this.controller.config.eventOptions)\n      // @ts-expect-error\n      target.setPointerCapture(pointerId)\n    }\n    this.updateGestureState({ _dragTarget: target, _dragPointerId: pointerId })\n  }\n\n  private releasePointerCapture = () => {\n    if (this.config.useTouch || document.pointerLockElement) return\n\n    const { _dragTarget, _dragPointerId } = this.state\n    if (_dragPointerId && _dragTarget && 'releasePointerCapture' in _dragTarget) {\n      // this would work in the DOM but doesn't with react three fiber\n      // target.removeEventListener('pointermove', this.onDragChange, this.controller.config.eventOptions)\n      if (!('hasPointerCapture' in _dragTarget) || _dragTarget.hasPointerCapture(_dragPointerId))\n        try {\n          _dragTarget.releasePointerCapture(_dragPointerId)\n        } catch (e) {}\n    }\n  }\n\n  private preventScroll = (event: TouchEvent) => {\n    if (this.state._dragPreventScroll && event.cancelable) {\n      event.preventDefault()\n    }\n  }\n\n  private getEventId = (event: any): number => {\n    if (this.config.useTouch) return event.changedTouches[0].identifier\n    return event.pointerId\n  }\n\n  private isValidEvent = (event: any) => {\n    // if we were using pointer events only event.isPrimary === 1 would suffice\n    return this.state._pointerId === this.getEventId(event)\n  }\n\n  private shouldPreventWindowScrollY =\n    this.config.experimental_preventWindowScrollY && this.controller.supportsTouchEvents\n\n  private setUpWindowScrollDetection = (event: React.PointerEvent | PointerEvent) => {\n    persistEvent(event)\n    // we add window listeners that will prevent the scroll when the user has started dragging\n    updateWindowListeners(\n      this.controller,\n      this.stateKey,\n      [\n        ['touchmove', this.preventScroll],\n        ['touchend', this.clean.bind(this)],\n        ['touchcancel', this.clean.bind(this)],\n      ],\n      { passive: false }\n    )\n    this.setTimeout(this.startDrag.bind(this), 250, event)\n  }\n\n  private setUpDelayedDragTrigger = (event: React.PointerEvent | PointerEvent) => {\n    this.state._dragDelayed = true\n    persistEvent(event)\n    this.setTimeout(this.startDrag.bind(this), this.config.delay, event)\n  }\n\n  private setStartState = (event: React.PointerEvent | PointerEvent) => {\n    const values = getPointerEventValues(event, this.transform)\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      _pointerId: this.getEventId(event), // setting pointerId locks the gesture to this specific event\n    })\n\n    this.updateGestureState(this.getMovement(values))\n  }\n\n  onDragStart = (event: React.PointerEvent | PointerEvent): void => {\n    addEventIds(this.controller, event)\n    if (!this.enabled || this.state._active) return\n\n    this.setStartState(event)\n    this.setPointerCapture(event as PointerEvent)\n\n    if (this.shouldPreventWindowScrollY) this.setUpWindowScrollDetection(event)\n    else if (this.config.delay > 0) this.setUpDelayedDragTrigger(event)\n    else this.startDrag(event, true) // we pass the values to the startDrag event\n  }\n\n  startDrag(event: React.PointerEvent | PointerEvent, onDragIsStart: boolean = false) {\n    // startDrag can happen after a timeout, so we need to check if the gesture is still active\n    // as the user might have lift up the pointer in between.\n\n    if (\n      // if the gesture isn't active (probably means)\n      !this.state._active ||\n      // if the drag has already started we should ignore subsequent attempts\n      this.state._dragStarted\n    )\n      return\n\n    if (!onDragIsStart) this.setStartState(event)\n    this.updateGestureState({ _dragStarted: true, _dragPreventScroll: true, cancel: this.onCancel })\n    this.clearTimeout()\n    this.fireGestureHandler()\n  }\n\n  onDragChange = (event: PointerEvent): void => {\n    if (\n      // if the gesture was canceled or\n      this.state.canceled ||\n      // if onDragStart wasn't fired or\n      !this.state._active ||\n      // if the event pointerId doesn't match the one that initiated the drag\n      !this.isValidEvent(event) ||\n      // if the event has the same timestamp as the previous event\n      // note that checking type equality is ONLY for tests ¯\\_(ツ)_/¯\n      (this.state._lastEventType === event.type && event.timeStamp === this.state.timeStamp)\n    )\n      return\n\n    let values\n\n    if (document.pointerLockElement) {\n      const { movementX, movementY } = event\n      values = addV(this.transform([movementX, movementY]), this.state.values)\n    } else values = getPointerEventValues(event, this.transform)\n\n    const kinematics = this.getKinematics(values, event)\n\n    // if startDrag hasn't fired\n    if (!this.state._dragStarted) {\n      // If the gesture isn't active then respond to the event only if\n      // it's been delayed via the `delay` option, in which case start\n      // the gesture immediately.\n      if (this.state._dragDelayed) {\n        this.startDrag(event)\n        return\n      }\n      // if the user wants to prevent vertical window scroll when user starts dragging\n      if (this.shouldPreventWindowScrollY) {\n        if (!this.state._dragPreventScroll && kinematics.axis) {\n          // if the user is dragging horizontally then we should allow the drag\n          if (kinematics.axis === 'x') {\n            this.startDrag(event)\n          } else {\n            this.state._active = false\n            return\n          }\n        } else return\n      } else return\n    }\n\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n    const genericPayload = getGenericPayload(this, event)\n\n    // This verifies if the drag can be assimilated to a tap by checking\n    // if the real distance of the drag (ie not accounting for the threshold) is\n    // greater than the TAP_DISTANCE_THRESHOLD.\n    const realDistance = calculateDistance(kinematics._movement!)\n    let { _dragIsTap } = this.state\n    if (_dragIsTap && realDistance >= TAP_DISTANCE_THRESHOLD) _dragIsTap = false\n\n    this.updateGestureState({ ...genericPayload, ...kinematics, _dragIsTap })\n\n    this.fireGestureHandler()\n  }\n\n  onDragEnd = (event: PointerEvent): void => {\n    removeEventIds(this.controller, event)\n\n    // if the event pointerId doesn't match the one that initiated the drag\n    // we don't want to end the drag\n    if (!this.isValidEvent(event)) return\n    this.clean()\n\n    // if the gesture is no longer active (ie canceled)\n    // don't do anything\n    if (!this.state._active) return\n    this.state._active = false\n\n    const tap = this.state._dragIsTap\n    const [vx, vy] = this.state.velocities\n    const [mx, my] = this.state.movement\n    const [ix, iy] = this.state._intentional\n    const [svx, svy] = this.config.swipeVelocity\n    const [sx, sy] = this.config.swipeDistance\n    const sd = this.config.swipeDuration\n\n    const endState = {\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n    }\n\n    const swipe: [number, number] = [0, 0]\n\n    if (endState.elapsedTime < sd) {\n      if (ix !== false && Math.abs(vx) > svx && Math.abs(mx) > sx) swipe[0] = sign(vx)\n      if (iy !== false && Math.abs(vy) > svy && Math.abs(my) > sy) swipe[1] = sign(vy)\n    }\n\n    this.updateSharedState({ buttons: 0 })\n    this.updateGestureState({ ...endState, tap, swipe })\n    this.fireGestureHandler(this.config.filterTaps && tap === true)\n  }\n\n  clean = (): void => {\n    super.clean()\n    this.state._dragStarted = false\n    this.releasePointerCapture()\n    clearWindowListeners(this.controller, this.stateKey)\n  }\n\n  onCancel = (): void => {\n    if (this.state.canceled) return\n    this.updateGestureState({ canceled: true, _active: false })\n    this.updateSharedState({ buttons: 0 })\n    setTimeout(() => this.fireGestureHandler(), 0)\n  }\n\n  onClick = (event: React.UIEvent | UIEvent): void => {\n    if (!this.state._dragIsTap) event.stopPropagation()\n  }\n\n  addBindings(bindings: any): void {\n    if (this.config.useTouch) {\n      addBindings(bindings, 'onTouchStart', this.onDragStart)\n      addBindings(bindings, 'onTouchMove', this.onDragChange) // this is needed for react-three-fiber\n      addBindings(bindings, 'onTouchEnd', this.onDragEnd)\n      addBindings(bindings, 'onTouchCancel', this.onDragEnd)\n    } else {\n      addBindings(bindings, 'onPointerDown', this.onDragStart)\n      addBindings(bindings, 'onPointerMove', this.onDragChange) // this is needed for react-three-fiber\n      addBindings(bindings, 'onPointerUp', this.onDragEnd)\n      addBindings(bindings, 'onPointerCancel', this.onDragEnd)\n    }\n\n    if (this.config.filterTaps) {\n      const handler = this.controller.config.eventOptions.capture ? 'onClick' : 'onClickCapture'\n      addBindings(bindings, handler, this.onClick)\n    }\n  }\n}\n","/**\n * Inlined from https://github.com/alexreardon/memoize-one\n */\n\nexport type EqualityFn = (newArgs: any[], lastArgs: any[]) => boolean\n\nexport default function memoizeOne<ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>>(\n  resultFn: ResultFn,\n  isEqual: EqualityFn\n): ResultFn {\n  let lastThis: unknown\n  let lastArgs: unknown[] = []\n  let lastResult: ReturnType<ResultFn>\n  let calledOnce: boolean = false\n\n  function memoized(this: unknown, ...newArgs: unknown[]): ReturnType<ResultFn> {\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult\n    }\n\n    lastResult = resultFn.apply(this, newArgs)\n    calledOnce = true\n    lastThis = this\n    lastArgs = newArgs\n    return lastResult\n  }\n\n  return memoized as ResultFn\n}\n","/**\n * Taken from https://github.com/FormidableLabs/react-fast-compare\n *\n * Dropped comments and ArrayBuffer handling\n */\n\nfunction equal(a: any, b: any): boolean {\n  if (a === b) return true\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false\n\n    let length, i, keys\n    if (Array.isArray(a)) {\n      length = a.length\n      if (length !== b.length) return false\n      for (i = length; i-- !== 0; ) if (!equal(a[i], b[i])) return false\n      return true\n    }\n\n    let it\n    if (typeof Map === 'function' && a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!equal(i.value[1], b.get(i.value[0]))) return false\n      return true\n    }\n\n    if (typeof Set === 'function' && a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false\n      return true\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf()\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString()\n\n    keys = Object.keys(a)\n    length = keys.length\n    if (length !== Object.keys(b).length) return false\n\n    for (i = length; i-- !== 0; ) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false\n\n    if (typeof Element !== 'undefined' && a instanceof Element) return false\n\n    for (i = length; i-- !== 0; ) {\n      if (keys[i] === '_owner' && a.$$typeof) continue\n      if (!equal(a[keys[i]], b[keys[i]])) return false\n    }\n    return true\n  }\n\n  // true if both NaN, false otherwise — NaN !== NaN → true\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b\n}\n\nexport default function isEqual(a: any, b: any) {\n  try {\n    return equal(a, b)\n  } catch (error) {\n    if ((error.message || '').match(/stack|recursion/i)) {\n      // eslint-disable-next-line no-console\n      console.warn('react-fast-compare cannot handle circular refs')\n      return false\n    }\n    throw error\n  }\n}\n","import { UseDragConfig, Handler, EventTypes } from '../types'\nimport { _buildDragConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { DragRecognizer } from '../recognizers/DragRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Drag hook.\n *\n * @param handler - the function fired every time the drag gesture updates\n * @param [config={}] - the config object including generic options and drag options\n */\nexport function useDrag<K = EventTypes['drag']>(handler: Handler<'drag', K>, config: UseDragConfig | {} = {}) {\n  RecognizersMap.set('drag', DragRecognizer)\n  const buildDragConfig = useRef<any>()\n  if (!buildDragConfig.current) {\n    buildDragConfig.current = memoize(_buildDragConfig, isEqual)\n  }\n  return useRecognizers<UseDragConfig>({ drag: handler }, buildDragConfig.current(config))\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, sign, subV } from '../utils/math'\nimport { Vector2, PartialGestureState, DistanceAngleKey, GestureState } from '../types'\n\n/**\n * @private\n * Abstract class for distance/angle-based gesture recongizers\n */\nexport default abstract class DistanceAngleRecognizer<T extends DistanceAngleKey> extends Recognizer<T> {\n  protected getInternalMovement(values: [number, number?], state: GestureState<T>): Vector2 {\n    const prev_a = state.values[1]\n    // not be defined if ctrl+wheel is used for zoom only\n    let [d, a = prev_a] = values\n\n    let delta_a = a - prev_a\n    let next_turns = state.turns\n    if (Math.abs(delta_a) > 270) next_turns += sign(delta_a)\n    return subV([d, a - 360 * next_turns], state.initial)\n  }\n\n  getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T> {\n    const state = this.getMovement(values)\n    const turns = (values[1] - state._movement![1] - this.state.initial[1]) / 360\n    const dt = event.timeStamp - this.state.timeStamp!\n    const { distance, velocity, ...kinematics } = calculateAllKinematics(state.movement!, state.delta!, dt)\n    return { turns, ...state, ...kinematics }\n  }\n\n  protected mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'> {\n    return { da: state.values, vdva: state.velocities } as Omit<PartialGestureState<T>, 'event'>\n  }\n}\n\n/**\n * @param dangle is a small change of variable on \"lifting\" of the circle.\n * It's expected to be small and cannot be greater than 270 or under -270\n */\nexport function fixContinuity(dangle: number) {\n  dangle -= Math.round(dangle / 360) * 360\n  if (dangle > 270) return dangle - 360\n  if (dangle < -270) return dangle + 360\n  return dangle\n}\n","import DistanceAngleRecognizer from './DistanceAngleRecognizer'\nimport { Vector2, WebKitGestureEvent } from '../types'\nimport {\n  getGenericEventData,\n  getTwoTouchesEventValues,\n  getWheelEventValues,\n  getWebkitGestureEventValues,\n  getTouchIds,\n} from '../utils/event'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings, addEventIds, removeEventIds } from '../Controller'\n\nconst ZOOM_CONSTANT = 7\nconst WEBKIT_DISTANCE_SCALE_FACTOR = 260\n\nexport class PinchRecognizer extends DistanceAngleRecognizer<'pinch'> {\n  readonly ingKey = 'pinching'\n  readonly stateKey = 'pinch'\n\n  onPinchStart = (event: React.TouchEvent | TouchEvent) => {\n    addEventIds(this.controller, event)\n    const touchIds = this.controller.touchIds\n\n    if (!this.enabled) return\n\n    if (this.state._active) {\n      // check that the pointerIds that initiated the gesture\n      // are still enabled. This is useful for when the page\n      // loses track of the pointers (minifying gesture on iPad).\n      if (this.state._pointerIds.every(id => touchIds.has(id))) return\n      // something was wrong with the pointers but we let it go.\n    }\n    // until we reach two fingers on the target don't react\n    if (touchIds.size < 2) return\n    const _pointerIds = Array.from(touchIds).slice(0, 2) as [number, number]\n\n    const { values, origin } = getTwoTouchesEventValues(event, _pointerIds, this.transform)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      _pointerIds,\n      cancel: this.onCancel,\n      origin,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onPinchChange = (event: React.TouchEvent | TouchEvent): void => {\n    const { canceled, _active } = this.state\n    if (\n      canceled ||\n      !_active ||\n      // if the event has the same timestamp as the previous event\n      event.timeStamp === this.state.timeStamp\n    )\n      return\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n    try {\n      const { values, origin } = getTwoTouchesEventValues(event, this.state._pointerIds, this.transform)\n      const kinematics = this.getKinematics(values, event)\n\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...kinematics,\n        origin,\n      })\n\n      this.fireGestureHandler()\n    } catch (e) {\n      this.onPinchEnd(event)\n    }\n  }\n\n  onPinchEnd = (event: React.TouchEvent | TouchEvent): void => {\n    removeEventIds(this.controller, event)\n    const pointerIds = getTouchIds(event)\n\n    // if none of the lifted pointerIds is in the state pointerIds don't do anything\n    if (this.state._pointerIds.every(id => !pointerIds.includes(id))) return\n\n    this.clean()\n    if (!this.state._active) return\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n      _active: false,\n    })\n    this.fireGestureHandler()\n  }\n\n  onCancel = (): void => {\n    if (this.state.canceled) return\n    this.updateGestureState({ _active: false, canceled: true })\n    setTimeout(() => this.fireGestureHandler(), 0)\n  }\n  /**\n   * PINCH WITH WEBKIT GESTURES\n   */\n  onGestureStart = (event: WebKitGestureEvent): void => {\n    if (!this.enabled) return\n    event.preventDefault()\n\n    const values = getWebkitGestureEventValues(event, this.transform)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n      cancel: this.onCancel,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onGestureChange = (event: WebKitGestureEvent): void => {\n    const { canceled, _active } = this.state\n    if (canceled || !_active) return\n\n    event.preventDefault()\n\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    // this normalizes the values of the Safari's WebKitEvent by calculating\n    // the delta and then multiplying it by a constant.\n    const values = getWebkitGestureEventValues(event, this.transform)\n    values[0] =\n      (values[0] - (this.state.event as WebKitGestureEvent).scale) * WEBKIT_DISTANCE_SCALE_FACTOR + this.state.values[0]\n\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...kinematics,\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onGestureEnd = (event: WebKitGestureEvent): void => {\n    this.clean()\n    if (!this.state._active) return\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n      _active: false,\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n    })\n    this.fireGestureHandler()\n  }\n\n  /**\n   * PINCH WITH WHEEL\n   */\n  private wheelShouldRun = (event: React.WheelEvent | WheelEvent) => {\n    return this.enabled && event.ctrlKey\n  }\n\n  private getWheelValuesFromEvent = (event: React.WheelEvent | WheelEvent) => {\n    const [, delta_d] = getWheelEventValues(event, this.transform)\n    const {\n      values: [prev_d, prev_a],\n    } = this.state\n    // ZOOM_CONSTANT is based on Safari trackpad natural zooming\n    const _delta_d = -delta_d * ZOOM_CONSTANT\n    // new distance is the previous state distance added to the delta\n    const d = prev_d + _delta_d\n    const a = prev_a !== void 0 ? prev_a : 0\n\n    return {\n      values: [d, a] as Vector2,\n      origin: [event.clientX, event.clientY] as Vector2,\n      delta: [_delta_d, a] as Vector2,\n    }\n  }\n\n  onWheel = (event: React.WheelEvent | WheelEvent): void => {\n    if (!this.wheelShouldRun(event)) return\n    this.setTimeout(this.onWheelEnd)\n\n    if (!this.state._active) this.onWheelStart(event)\n    else this.onWheelChange(event)\n  }\n\n  onWheelStart = (event: React.WheelEvent | WheelEvent): void => {\n    const { values, delta, origin } = this.getWheelValuesFromEvent(event)\n\n    if (event.cancelable) event.preventDefault()\n    else if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'To properly support zoom on trackpads, try using the `domTarget` option and `config.eventOptions.passive` set to `false`. This message will only appear in development mode.'\n      )\n    }\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event, this.state.values),\n      ...getGenericPayload(this, event, true),\n      offset: values,\n      delta,\n      origin,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onWheelChange = (event: React.WheelEvent | WheelEvent): void => {\n    if (event.cancelable) event.preventDefault()\n\n    this.updateSharedState(getGenericEventData(event))\n    const { values, origin, delta } = this.getWheelValuesFromEvent(event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getKinematics(values, event),\n      origin,\n      delta,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onWheelEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    this.state._active = false\n    this.updateGestureState(this.getMovement(this.state.values))\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    // Only try to use gesture events when they are supported and domTarget is set\n    // as React doesn't support gesture handlers.\n    if (\n      this.controller.config.domTarget &&\n      !this.controller.supportsTouchEvents &&\n      this.controller.supportsGestureEvents\n    ) {\n      addBindings(bindings, 'onGestureStart', this.onGestureStart)\n      addBindings(bindings, 'onGestureChange', this.onGestureChange)\n      addBindings(bindings, 'onGestureEnd', this.onGestureEnd)\n    } else {\n      addBindings(bindings, 'onTouchStart', this.onPinchStart)\n      addBindings(bindings, 'onTouchMove', this.onPinchChange)\n      addBindings(bindings, 'onTouchEnd', this.onPinchEnd)\n      addBindings(bindings, 'onTouchCancel', this.onPinchEnd)\n      addBindings(bindings, 'onWheel', this.onWheel)\n    }\n  }\n}\n","import { UsePinchConfig, Handler, EventTypes } from '../types'\nimport { _buildPinchConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { PinchRecognizer } from '../recognizers/PinchRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Pinch hook.\n *\n * @param handler - the function fired every time the pinch gesture updates\n * @param [config={}] - the config object including generic options and pinch options\n */\nexport function usePinch<K = EventTypes['pinch']>(handler: Handler<'pinch', K>, config: UsePinchConfig | {} = {}) {\n  RecognizersMap.set('pinch', PinchRecognizer)\n  const buildPinchConfig = useRef<any>()\n  if (!buildPinchConfig.current) {\n    buildPinchConfig.current = memoize(_buildPinchConfig, isEqual)\n  }\n  return useRecognizers<UsePinchConfig>({ pinch: handler }, buildPinchConfig.current(config))\n}\n","import { WheelEvent } from 'react'\nimport CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getWheelEventValues, getGenericEventData } from '../utils/event'\nimport { addV, calculateAllGeometry } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class WheelRecognizer extends CoordinatesRecognizer<'wheel'> {\n  readonly ingKey = 'wheeling'\n  readonly stateKey = 'wheel'\n  debounced = true\n\n  handleEvent = (event: React.WheelEvent | WheelEvent): void => {\n    if (event.ctrlKey && 'pinch' in this.controller.handlers) return\n    if (!this.enabled) return\n\n    this.setTimeout(this.onEnd)\n    this.updateSharedState(getGenericEventData(event))\n\n    const values = addV(getWheelEventValues(event, this.transform), this.state.values)\n\n    if (!this.state._active) {\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event, this.state.values),\n        ...getGenericPayload(this, event, true),\n      })\n\n      const movement = this.getMovement(values)\n      const geometry = calculateAllGeometry(movement.delta!)\n\n      this.updateGestureState(movement)\n      this.updateGestureState(geometry)\n    } else {\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n      })\n    }\n\n    this.fireGestureHandler()\n  }\n\n  onEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    const movement = this.getMovement(this.state.values)\n    this.updateGestureState(movement)\n    this.updateGestureState({ _active: false, velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onWheel', this.handleEvent)\n  }\n}\n","import { UseWheelConfig, Handler, EventTypes } from '../types'\nimport { _buildWheelConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { WheelRecognizer } from '../recognizers/WheelRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Wheel hook.\n *\n * @param handler - the function fired every time the wheel gesture updates\n * @param the config object including generic options and wheel options\n */\nexport function useWheel<K = EventTypes['wheel']>(handler: Handler<'wheel', K>, config: UseWheelConfig | {} = {}) {\n  RecognizersMap.set('wheel', WheelRecognizer)\n  const buildWheelConfig = useRef<any>()\n  if (!buildWheelConfig.current) {\n    buildWheelConfig.current = memoize(_buildWheelConfig, isEqual)\n  }\n  return useRecognizers<UseWheelConfig>({ wheel: handler }, buildWheelConfig.current(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getGenericEventData, getPointerEventValues } from '../utils/event'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class MoveRecognizer extends CoordinatesRecognizer<'move'> {\n  readonly ingKey = 'moving'\n  readonly stateKey = 'move'\n\n  debounced = true\n\n  onMove = (event: React.PointerEvent | PointerEvent): void => {\n    if (!this.enabled) return\n    this.setTimeout(this.onMoveEnd)\n\n    if (!this.state._active) this.onMoveStart(event)\n    else this.onMoveChange(event)\n  }\n\n  onMoveStart = (event: React.PointerEvent | PointerEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n    const values = getPointerEventValues(event, this.transform)\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onMoveChange = (event: React.PointerEvent | PointerEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n    const values = getPointerEventValues(event, this.transform)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getKinematics(values, event),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onMoveEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    const values = this.state.values\n    this.updateGestureState(this.getMovement(values))\n    this.updateGestureState({ velocities: [0, 0], velocity: 0, _active: false })\n    this.fireGestureHandler()\n  }\n\n  hoverTransform = () => {\n    return this.controller.config.hover!.transform || this.controller.config.transform\n  }\n\n  onPointerEnter = (event: React.PointerEvent | PointerEvent): void => {\n    this.controller.state.shared.hovering = true\n    if (!this.controller.config.enabled) return\n\n    if (this.controller.config.hover!.enabled) {\n      const values = getPointerEventValues(event, this.hoverTransform())\n\n      const state = {\n        ...this.controller.state.shared,\n        ...this.state,\n        ...getGenericPayload(this, event, true),\n        args: this.args,\n        values,\n        active: true,\n        hovering: true,\n      }\n\n      this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n    }\n\n    if ('move' in this.controller.handlers) this.onMoveStart(event)\n  }\n\n  onPointerLeave = (event: React.PointerEvent | PointerEvent): void => {\n    this.controller.state.shared.hovering = false\n    if ('move' in this.controller.handlers) this.onMoveEnd()\n    if (!this.controller.config.hover!.enabled) return\n\n    const values = getPointerEventValues(event, this.hoverTransform())\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...getGenericPayload(this, event),\n      args: this.args,\n      values,\n      active: false,\n    }\n\n    this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n  }\n\n  addBindings(bindings: any): void {\n    if ('move' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerMove', this.onMove)\n    }\n    if ('hover' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerEnter', this.onPointerEnter)\n      addBindings(bindings, 'onPointerLeave', this.onPointerLeave)\n    }\n  }\n}\n","import { UseMoveConfig, Handler, EventTypes } from '../types'\nimport { _buildMoveConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Move hook.\n *\n * @param handler - the function fired every time the move gesture updates\n * @param [config={}] - the config object including generic options and move options\n */\nexport function useMove<K = EventTypes['move']>(handler: Handler<'move', K>, config: UseMoveConfig | {} = {}) {\n  RecognizersMap.set('move', MoveRecognizer)\n  const buildMoveConfig = useRef<any>()\n  if (!buildMoveConfig.current) {\n    buildMoveConfig.current = memoize(_buildMoveConfig, isEqual)\n  }\n  return useRecognizers<UseMoveConfig>({ move: handler }, buildMoveConfig.current(config))\n}\n","import { Handler, UseHoverConfig, EventTypes } from '../types'\nimport { _buildHoverConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Hover hook.\n *\n * @param handler - the function fired every time the hover gesture updates\n * @param [config={}] - the config object including generic options and hover options\n */\nexport function useHover<K = EventTypes['hover']>(handler: Handler<'hover', K>, config: UseHoverConfig | {} = {}) {\n  RecognizersMap.set('hover', MoveRecognizer)\n  const buildHoverConfig = useRef<any>()\n  if (!buildHoverConfig.current) {\n    buildHoverConfig.current = memoize(_buildHoverConfig, isEqual)\n  }\n  return useRecognizers<UseHoverConfig>({ hover: handler }, buildHoverConfig.current(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getGenericEventData, getScrollEventValues } from '../utils/event'\nimport { calculateAllGeometry } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class ScrollRecognizer extends CoordinatesRecognizer<'scroll'> {\n  readonly ingKey = 'scrolling'\n  readonly stateKey = 'scroll'\n  debounced = true\n\n  handleEvent = (event: React.UIEvent | UIEvent): void => {\n    if (!this.enabled) return\n\n    this.clearTimeout()\n    this.setTimeout(this.onEnd)\n\n    const values = getScrollEventValues(event, this.transform)\n    this.updateSharedState(getGenericEventData(event))\n\n    if (!this.state._active) {\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event, this.state.values),\n        ...getGenericPayload(this, event, true),\n      })\n\n      const movementDetection = this.getMovement(values)\n      const geometry = calculateAllGeometry(movementDetection.delta!)\n\n      this.updateGestureState(movementDetection)\n      this.updateGestureState(geometry)\n    } else {\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n      })\n    }\n\n    this.fireGestureHandler()\n  }\n\n  onEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    this.updateGestureState({ ...this.getMovement(this.state.values), _active: false, velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onScroll', this.handleEvent)\n  }\n}\n","import { UseScrollConfig, Handler, EventTypes } from '../types'\nimport { _buildScrollConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { ScrollRecognizer } from '../recognizers/ScrollRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Scroll hook.\n *\n * @param handler - the function fired every time the scroll gesture updates\n * @param [config={}] - the config object including generic options and scroll options\n */\nexport function useScroll<K = EventTypes['scroll']>(handler: Handler<'scroll', K>, config: UseScrollConfig | {} = {}) {\n  RecognizersMap.set('scroll', ScrollRecognizer)\n  const buildScrollConfig = useRef<any>()\n  if (!buildScrollConfig.current) {\n    buildScrollConfig.current = memoize(_buildScrollConfig, isEqual)\n  }\n  return useRecognizers<UseScrollConfig>({ scroll: handler }, buildScrollConfig.current(config))\n}\n","import useRecognizers from './useRecognizers'\nimport { buildComplexConfig } from './buildConfig'\nimport {\n  InternalConfig,\n  InternalHandlers,\n  UserHandlers,\n  UseGestureConfig,\n  Handlers,\n  EventTypes,\n  AnyGestureEventTypes,\n} from '../types'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { DragRecognizer } from '../recognizers/DragRecognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport { PinchRecognizer } from '../recognizers/PinchRecognizer'\nimport { ScrollRecognizer } from '../recognizers/ScrollRecognizer'\nimport { WheelRecognizer } from '../recognizers/WheelRecognizer'\n\nexport function wrapStart(fn: Function) {\n  return function (this: any, { first }: any) {\n    if (first) fn.apply(this, arguments)\n  }\n}\n\nexport function wrapEnd(fn: Function) {\n  return function (this: any, { last }: any) {\n    if (last) fn.apply(this, arguments)\n  }\n}\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/\n\nfunction sortHandlers(handlers: object) {\n  const native: any = {}\n  const handle: any = {}\n  const actions = new Set()\n\n  for (let key in handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch)\n      handle[key] = (handlers as any)[key]\n    } else {\n      native[key] = (handlers as any)[key]\n    }\n  }\n\n  return [handle, native, actions]\n}\n\n/**\n * @public\n *\n * The most complete gesture hook, allowing support for multiple gestures.\n *\n * @param {Handlers} handlers - an object with on[Gesture] keys containg gesture handlers\n * @param {UseGestureConfig} [config={}] - the full config object\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useGesture<T extends AnyGestureEventTypes = EventTypes>(\n  _handlers: Handlers<T>,\n  config: UseGestureConfig = {}\n) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(_handlers)\n\n  RecognizersMap.set('drag', DragRecognizer)\n  RecognizersMap.set('hover', MoveRecognizer)\n  RecognizersMap.set('move', MoveRecognizer)\n  RecognizersMap.set('pinch', PinchRecognizer)\n  RecognizersMap.set('scroll', ScrollRecognizer)\n  RecognizersMap.set('wheel', WheelRecognizer)\n\n  const mergedConfig: InternalConfig = buildComplexConfig(config, actions)\n  const internalHandlers: Partial<InternalHandlers> = {}\n\n  if (actions.has('onDrag')) internalHandlers.drag = includeStartEndHandlers(handlers, 'onDrag')\n  if (actions.has('onWheel')) internalHandlers.wheel = includeStartEndHandlers(handlers, 'onWheel')\n  if (actions.has('onScroll')) internalHandlers.scroll = includeStartEndHandlers(handlers, 'onScroll')\n  if (actions.has('onMove')) internalHandlers.move = includeStartEndHandlers(handlers, 'onMove')\n  if (actions.has('onPinch')) internalHandlers.pinch = includeStartEndHandlers(handlers, 'onPinch')\n  if (actions.has('onHover')) internalHandlers.hover = handlers.onHover\n\n  return useRecognizers<UseGestureConfig>(internalHandlers, mergedConfig, nativeHandlers)\n}\n\n/**\n * @private\n *\n * This utility function will integrate start and end handlers into the regular\n * handler function by using first and last conditions.\n *\n * @param {UserHandlersPartial} handlers - the handlers function object\n * @param {HandlerKey} handlerKey - the key for which to integrate start and end handlers\n * @returns\n */\ntype HandlerKey = 'onDrag' | 'onPinch' | 'onWheel' | 'onMove' | 'onScroll' | 'onHover'\nfunction includeStartEndHandlers(handlers: Partial<UserHandlers>, handlerKey: HandlerKey) {\n  const startKey = (handlerKey + 'Start') as keyof UserHandlers\n  const endKey = (handlerKey + 'End') as keyof UserHandlers\n\n  const fn = (state: any) => {\n    let memo: any = undefined\n    if (state.first && startKey in handlers) handlers[startKey]!(state)\n    if (handlerKey in handlers) memo = handlers[handlerKey]!(state)\n    if (state.last && endKey in handlers) handlers[endKey]!(state)\n    return memo\n  }\n  return fn\n}\n"],"names":["addV","v1","v2","map","v","i","subV","calculateDistance","movement","Math","hypot","calculateAllGeometry","delta","dl","alpha","direction","distance","calculateAllKinematics","dt","beta","velocity","velocities","sign","x","Number","minMax","value","min","max","rubberband2","constant","pow","rubberband","dimension","abs","Infinity","rubberbandIfOutOfBounds","position","noop","chainFns","fns","length","result","fn","apply","arguments","ensureVector","fallback","undefined","Error","Array","isArray","assignDefault","Object","assign","valueFn","args","resolveWith","config","resolvers","entries","key","resolver","call","supportsGestureEvents","GestureEvent","e","supportsTouchEvents","window","supportsPointerEvents","getEventTouches","event","type","changedTouches","targetTouches","getTouchIds","from","t","identifier","getGenericEventData","buttons","shiftKey","altKey","metaKey","ctrlKey","identity","xy","getPointerEventValues","transform","touchEvents","clientX","clientY","getTwoTouchesEventValues","pointerIds","touches","filter","includes","A","B","dx","dy","cx","cy","angle","atan2","PI","values","origin","getScrollEventValues","currentTarget","scrollX","scrollY","scrollLeft","scrollTop","LINE_HEIGHT","PAGE_HEIGHT","getWheelEventValues","deltaX","deltaY","deltaMode","getWebkitGestureEventValues","scale","rotation","DEFAULT_DRAG_DELAY","DEFAULT_RUBBERBAND","DEFAULT_SWIPE_VELOCITY","DEFAULT_SWIPE_DISTANCE","DEFAULT_SWIPE_DURATION","InternalGestureOptionsNormalizers","threshold","enabled","triggerAllEvents","initial","InternalCoordinatesOptionsNormalizers","axis","lockDirection","bounds","state","left","right","top","bottom","isBrowser","document","createElement","InternalGenericOptionsNormalizers","domTarget","eventOptions","passive","capture","InternalDistanceAngleOptionsNormalizers","_value","_key","distanceBounds","angleBounds","_distanceBounds","D","_angleBounds","InternalDragOptionsNormalizers","useTouch","supportsTouch","supportsPointer","experimental_preventWindowScrollY","_k","filterTaps","swipeVelocity","swipeDistance","swipeDuration","delay","getInternalGenericOptions","getInternalCoordinatesOptions","getInternalDistanceAngleOptions","getInternalDragOptions","_buildMoveConfig","rest","opts","move","_buildHoverConfig","hover","_buildDragConfig","drag","_buildPinchConfig","pinch","_buildScrollConfig","scroll","_buildWheelConfig","wheel","buildComplexConfig","actions","Set","mergedConfig","has","getInitial","mixed","_active","_blocked","_intentional","_movement","_initial","_bounds","_threshold","_lastEventType","_dragStarted","_dragPreventScroll","_dragIsTap","_dragDelayed","intentional","offset","lastOffset","previous","first","last","active","timeStamp","startTime","elapsedTime","cancel","canceled","memo","getInitialState","shared","hovering","scrolling","wheeling","dragging","moving","pinching","down","locked","_pointerId","vxvy","tap","swipe","_pointerIds","da","vdva","turns","RecognizersMap","Map","Recognizer","controller","callback","ms","clearTimeout","timeouts","stateKey","setTimeout","forceFlag","debounced","clean","prev_active","next_active","ingKey","size","touchIds","mapStateValues","pointerLockElement","newMemo","handler","updateSharedState","sharedState","updateGestureState","gestureState","checkIntentionality","getMovement","wasIntentional","prevMovement","_T","M","getInternalMovement","i0","getIntentionalDisplacement","i1","intentionalityCheck","_rubberband","computeRubberband","handlers","Vx","Vy","Rx","Ry","X1","X2","Y1","Y2","getGenericPayload","isStartEvent","getStartGestureState","initialFn","_state","Controller","classes","bindings","RecognizerClass","addBindings","eventKey","nativeRefs","updateDomListeners","getPropsListener","bind","getDomTargetFromConfig","removeListeners","takeAll","domListeners","forEach","clearAllWindowListeners","windowListeners","addEventIds","add","pointerId","removeEventIds","id","el","clearWindowListeners","options","updateWindowListeners","listeners","addListeners","name","slice","toLowerCase","push","props","captureString","fnsArray","array","splice","current","eventName","eventHandler","addEventListener","removeEventListener","useRecognizers","nativeHandlers","resolveClasses","React","useMemo","useEffect","effect","deprecationNoticeForDomTarget","console","warn","internalHandlers","get","CoordinatesRecognizer","absX","absY","getKinematics","TAP_DISTANCE_THRESHOLD","persistEvent","persist","DragRecognizer","target","setPointerCapture","_dragTarget","_dragPointerId","hasPointerCapture","releasePointerCapture","cancelable","preventDefault","getEventId","preventScroll","startDrag","setStartState","shouldPreventWindowScrollY","setUpWindowScrollDetection","setUpDelayedDragTrigger","isValidEvent","movementX","movementY","kinematics","genericEventData","genericPayload","realDistance","fireGestureHandler","vx","vy","mx","my","ix","iy","svx","svy","sx","sy","sd","endState","stopPropagation","onDragIsStart","onCancel","onDragStart","onDragChange","onDragEnd","onClick","memoizeOne","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","equal","a","b","constructor","keys","it","next","done","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","Element","$$typeof","error","message","match","useDrag","set","buildDragConfig","useRef","memoize","DistanceAngleRecognizer","prev_a","d","delta_a","next_turns","ZOOM_CONSTANT","WEBKIT_DISTANCE_SCALE_FACTOR","PinchRecognizer","every","onPinchEnd","delta_d","prev_d","_delta_d","wheelShouldRun","onWheelEnd","onWheelStart","onWheelChange","getWheelValuesFromEvent","onGestureStart","onGestureChange","onGestureEnd","onPinchStart","onPinchChange","onWheel","usePinch","buildPinchConfig","WheelRecognizer","onEnd","geometry","handleEvent","useWheel","buildWheelConfig","MoveRecognizer","onMoveEnd","onMoveStart","onMoveChange","hoverTransform","onMove","onPointerEnter","onPointerLeave","useMove","buildMoveConfig","useHover","buildHoverConfig","ScrollRecognizer","movementDetection","useScroll","buildScrollConfig","RE_NOT_NATIVE","sortHandlers","native","handle","test","lastMatch","useGesture","_handlers","includeStartEndHandlers","onHover","handlerKey","startKey","endKey"],"mappings":"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"}